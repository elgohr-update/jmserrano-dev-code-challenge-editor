name: CI-CD
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: "🚧 Configure Node ${{ matrix.node-version }}"
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: "📦️ Install packages"
        run: yarn install

      - name: "✅ Run tests"
        run: yarn test
        env:
          CI: true

      - name: "🏗️ Build proyect"
        run: yarn build

      - name: "📦 Publish artifact"
        uses: actions/upload-artifact@v1
        with:
          name: spa
          path: build

  dockerize:
    runs-on: ubuntu-latest
    needs: build

    steps:
      steps:
        - uses: actions/checkout@v2

        - name: "🔑 Login to gitHub packages"
          uses: docker/login-action@v1
          with:
            registry: docker.pkg.github.com
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: "🏷️ Generate tag image"
          id: vars
          run: echo ::set-output name=tag::$(echo ${GITHUB_SHA::7})

        - name: "🐳 Build and push to GitHub Packages"
          uses: docker/build-push-action@v2
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: docker.pkg.github.com/code-challenge/editor-spa:${{ steps.vars.outputs.tag }}

  deploy:
    runs-on: ubuntu-latest
    needs: dockerize

    steps:
      - name: Get artifact
        uses: actions/download-artifact@v1
        with:
          name: spa

      - name: "🚀 Deploy to gh-pages"
        uses: peaceiris/actions-gh-pages@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./spa
